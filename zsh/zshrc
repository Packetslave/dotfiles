source /opt/homebrew/share/powerlevel10k/powerlevel10k.zsh-theme

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.

if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#
## My zshrc
##

if [ -f /opt/homebrew/bin/brew ] ; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

#
# Local config
#

if [[ -f $HOME/.zshrc.before ]] ; then
  . $HOME/.zshrc.before
fi

#
# History configs
#

HISTSIZE=500000
SAVEHIST=5000000
HISTFILE=~/.zsh_history
setopt APPEND_HISTORY
setopt EXTENDED_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_VERIFY
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY

#
# Paths
#
function add_path() {
  if [[ -z "$1" ]] ; then
    return
  fi
  if [[ -d "$1" ]] ; then
    export PATH="$1":$PATH
  fi
}
#
# Functions
#

function s2c { tr ' ' ',' }
function s2n { tr ' ' '\n' }

function c2s { tr ',' ' ' }
function c2n { tr ',' '\n' }

function n2c { tr '\n' ',' }
function n2s { tr '\n' ' ' }

function minus1 { sed -e 's/.$//' }

function device_for_path ()
{
  df --output=source $1 | tail -1
}

function freq () {
  history \
  | awk '{CMD[$2]++;count++;}END { for (a in CMD)print CMD[a] " " CMD[a]/count*100 "% " a;}' \
  | grep -v "./" \
  | column -c3 -s " " -t \
  | sort -nr \
  | nl \
  |  head -n10
}

#
# oh-my-zsh
#
if [[ -d "$HOME/src/external/oh-my-zsh" ]] ; then
  export ZSH=$HOME/src/external/oh-my-zsh
  export AUTOENV_ENABLE_LEAVE=1
  plugins=(
    autoenv
    brew
    colored-man-pages
    colorize
    common-aliases
    docker
    docker-compose
    fzf
    git
    golang
    iterm2
    kubectl
    mosh
    wd
    zoxide
  )
  source $ZSH/oh-my-zsh.sh
else
  >&2 "WARNING: oh my zsh not installed"
  >&2 "mkdir -p ~/src/external && cd ~/src/external && git clone https://github.com/robbyrussell/oh-my-zsh.git"
fi

# Why aren't these defined?
alias dk="docker kill"
alias dka='docker kill $(docker ps -q)'
alias dpsl="docker ps -l"
alias dpsq="docker ps -q"
alias dpsql="docker ps -ql"

alias a1='awk "{print \$1}"'
alias a2='awk "{print \$2}"'
alias a3='awk "{print \$3}"'
alias a4='awk "{print \$4}"'

unalias md

function md() {
  mkdir $1 && cd $1
}

function frg {
  result=$(rg --ignore-case --color=always --line-number --no-heading "$@" |
    fzf --ansi \
        --color 'hl:-1:underline,hl+:-1:underline:reverse' \
        --delimiter ':' \
        --preview "bat --color=always {1} --theme='Solarized (light)' --highlight-line {2}" \
        --preview-window 'up,60%,border-bottom,+{2}+3/3,~3')
  file=${result%%:*}
  linenumber=$(echo "${result}" | cut -d: -f2)
  if [[ -n "$file" ]]; then
    ${EDITOR:-vim} +"${linenumber}" "$file"
  fi
}

alias ap="ansible-playbook ~/dotfiles/ansible/bootstrap.yaml"

func thist() {
  perl -pe 's/^.+?;//' "$HISTFILE"|sort|uniq -c|sort -rn|head -15
}

export HOMEBREW_AUTO_UPDATE_SECS=86400

alias ls="EZA_COLORS='da=36' eza --time-style=relative --color-scale=age"
alias lsa="ls --almost-all" # ignore . ..
alias lsc="ls --color=always"
alias l="ls --color=always --long --classify=always" # show file indicators
alias la="l --almost-all"
alias ltreea="ls --tree --color=always"
alias ltree="ltreea --level=2"
alias lt="ls --long --sort=time --color-scale=age" # Use green for color aging
alias lta="lt --almost-all"
alias lg="eza --grid --long"
# lsd is faster than eza
alias lss="lsd --long --total-size --sort=size --reverse"
alias lssa="lss --almost-all"
alias rg=batgrep

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

if [[ -d /opt/homebrew ]] ; then
    source /opt/homebrew/share/powerlevel10k/powerlevel10k.zsh-theme
fi

export AWS_SDK_LOAD_CONFIG=true
alias gdm=git diff $(git_main_branch)
export PATH=/usr/class/bin:$PATH

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

alias dg="doggo --strategy=random --time"
func dj() { dg --json "$@" | jq -C . }

alias gotv="got -v"

function node4pod { kubectl get node -o json $(kgp $1 --no-headers -o custom-columns=NODE:.spec.nodeName) }

if [[ -d $HOME/bin ]] ; then
  export PATH=$HOME/bin:$PATH
fi

function mdg()
{
    for i in 8.8.8.8  9.9.9.9  1.1.1.1  4.2.2.1  208.67.222.222  76.76.2.0; do
        echo -------- $i --------
        dg @${i} $1
    done
}

function gdcb() {
    if [[ "$(git_current_branch)" != "$(git_main_branch)" ]] ; then
        local b=$(git_current_branch);                                                                              ─╯
        git checkout $(git_main_branch)
        git branch -D ${b}
    fi
}

unalias rg

unalias gdw
alias gdw="gd -w"
alias utc="date -z UTC"
alias buu="brew update && brew upgrade"

function git-rotate() { git branch -D $1 && gcb $1 }

#
# Local config
#

if [[ -f $HOME/.zshrc.after ]] ; then
  . $HOME/.zshrc.after
fi


type atuin &> /dev/null && eval "$(atuin init zsh --disable-up-arrow)"

type rbenv &> /dev/null && eval "$(rbenv init - --no-rehash zsh)"


alias claude="/Users/blanders/.claude/local/claude"
